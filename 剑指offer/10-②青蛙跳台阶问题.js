/*
一只青蛙一次可以跳上1级台阶，也可以跳上2级台阶。求该青蛙跳上一个 n 级的台阶总共有多少种跳法。
答案需要取模 1e9+7（1000000007），如计算初始结果为：1000000008，请返回 1。

示例 1：
输入：n = 2
输出：2

示例 2：
输入：n = 7
输出：21

示例 3：
输入：n = 0
输出：1

提示：
0 <= n <= 100
*/

/**
 * @param {number} n
 * @return {number}
 */
 var numWays = function(n) {
    // 设跳上n级台阶有f(n)种跳法。在所有跳法中，青蛙的最后一步只有两种情况： 跳上11级或22级台阶。
    // 当为1级台阶： 剩n-1个台阶，此情况共有 f(n-1)种跳法；
    // 当为2级台阶： 剩n-2个台阶，此情况共有 f(n-2)种跳法。
    // f(n)为以上两种情况之和，即f(n)=f(n−1)+f(n−2) ，以上递推性质为斐波那契数列。

    if (n == 0) return 1;
    let a = 0, b = 1;
    for (let i=0; i <= n; i++) {
        sum = (a + b) % 1000000007;
        a = b; 
        b = sum;
    }
    return a;
};