/*
描述
判断输入是否是正确的邮箱格式
输入描述：
邮箱字符串
输出描述：
true表示格式正确
*/

/*
1.不限制长度
2.不限制大小写
3.邮箱开头必须是数字或字符串
4.邮箱中可以使用字母、数字、点号、下划线、减号，但是不能连写点号、下划线、减号，如 abc_-de@q_.q.com
5.@符号前后不能为点号、下划线、减号
*/

function isAvailableEmail(sEmail) {
    let pattern = /^[a-zA-Z0-9_.]{1,}@[a-zA-Z0-9_.]{1,}[a-zA-Z0-9]{2,4}$/;
    // let pattern = /^([\w+\.])+@\w+([.]\w+)+$/;
    /*
    分析：
    122_.123@qq.com.cm
    ([\w+\.])+：等同于[a-zA-Z0-9_\.]，也就是a-zA-Z0-9_.任意其中一个就是匹配到的，所以不一定要有.；(理解中括号的正则) 例子中匹配到的部分：122_.123
    @: 匹配到@
    \w+: 一个或多个[a-zA-Z0-9_]，例子中匹配的部分：qq(也就是以\w开头的，注意这里没有点)
    ([.]\w+)+: 以点开头的，后跟一个或多个[a-zA-Z0-9_]：例子匹配到的部分：.com、.cm
    $: 结束符（懂的人：这是废话）
    */
    return pattern.test(sEmail);
}